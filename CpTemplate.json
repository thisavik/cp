{
	"basic snippet": {
		"prefix": "code",
		"body": [
			"/*",
			" *  author: thisavik",
			" *  created: $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND $CURRENT_DATE-$CURRENT_MONTH-$CURRENT_YEAR $CURRENT_DAY_NAME_SHORT",
			"**/",
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"",
			"#define int long long",
			"#define rep(i, n) for(int i = 0; i < n; i++)",
			"#define range(i, a, b) for (int i = a; i <= b; i++)",
			"#define rrep(i, a, b) for (int i = a; i >= b; i--)",
			"#define all(x) (x).begin(), (x).end()",
			"",
			"void tool()",
			"{",
			"  ios_base::sync_with_stdio(false);",
			"  cin.tie(NULL);",
			"#ifndef ONLINE_JUDGE",
			"  freopen(\"input.txt\", \"r\", stdin);",
			"  freopen(\"output.txt\", \"w\", stdout);",
			"#endif",
			"}",
			"",
			"void solve()",
			"{",
			"",
			"}",
			"",
			"int32_t main(int32_t argc, char *args[])",
			"{",
			"  tool();",
			"  int t;",
			"  cin >> t;",
			"  while(t--)",
			"    solve(); ",
			"  return 0;",
			"}"
		],
		"description": "basic snippet"
	},
	"debug snippet": {
		"prefix": "debug",
		"body": [
			"#define rep(i, n) for (int i = 0; i < n; i++)",
			"#define range(i, a, b) for (int i = a; i <= b; i++)",
			"template <typename A, typename B>",
			"ostream &operator<<(ostream &out, const pair<A, B> &a)",
			"{",
			"  out << \"(\" << a.first << \",\" << a.second << \")\";",
			"  return out;",
			"}",
			"template <typename T, size_t N>",
			"ostream &operator<<(ostream &out, const array<T, N> &a)",
			"{",
			"  out << \"[\";",
			"  bool first = true;",
			"  for (auto &v : a)",
			"  {",
			"    out << (first ? \"\" : \", \");",
			"    out << v;",
			"    first = 0;",
			"  }",
			"  out << \"]\";",
			"  return out;",
			"}",
			"template <typename T>",
			"ostream &operator<<(ostream &out, const vector<T> &a)",
			"{",
			"  out << \"[\";",
			"  bool first = true;",
			"  for (auto &v : a)",
			"  {",
			"    out << (first ? \"\" : \", \");",
			"    out << v;",
			"    first = 0;",
			"  }",
			"  out << \"]\";",
			"  return out;",
			"}",
			"template <typename T, class Cmp>",
			"ostream &operator<<(ostream &out, const set<T, Cmp> &a)",
			"{",
			"  out << \"{\";",
			"  bool first = true;",
			"  for (auto &v : a)",
			"  {",
			"    out << (first ? \"\" : \", \");",
			"    out << v;",
			"    first = 0;",
			"  }",
			"  out << \"}\";",
			"  return out;",
			"}",
			"template <typename U, typename T, class Cmp>",
			"ostream &operator<<(ostream &out, const map<U, T, Cmp> &a)",
			"{",
			"  out << \"{\";",
			"  bool first = true;",
			"  for (auto &p : a)",
			"  {",
			"    out << (first ? \"\" : \", \");",
			"    out << p.first << \":\" << p.second;",
			"    first = 0;",
			"  }",
			"  out << \"}\";",
			"  return out;",
			"}",
			"#ifndef LOCAL",
			"#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)",
			"#else",
			"#define trace(...) 42",
			"#endif",
			"template <typename Arg1>",
			"void __f(const char *name, Arg1 &&arg1)",
			"{",
			"  cerr << name << \": \" << arg1 << endl;",
			"}",
			"template <typename Arg1, typename... Args>",
			"void __f(const char *names, Arg1 &&arg1, Args &&...args)",
			"{",
			"  const char *comma = strchr(names + 1, ',');",
			"  cerr.write(names, comma - names) << \": \" << arg1 << \" |\";",
			"  __f(comma + 1, args...);",
			"}"
		],
		"description": "debug snippet"
	}
}
